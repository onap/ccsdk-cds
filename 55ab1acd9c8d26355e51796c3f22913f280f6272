{
  "comments": [
    {
      "key": {
        "uuid": "b4925bab_6abe00e3",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 260,
      "author": {
        "id": 865
      },
      "writtenOn": "2019-09-19T02:17:05Z",
      "side": 1,
      "message": "This API can refactored.. it\u0027s unneccessarly creating vars and assigning same value again and again.",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a88e00_cf585a7f",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 260,
      "author": {
        "id": 4615
      },
      "writtenOn": "2019-09-19T02:53:42Z",
      "side": 1,
      "message": "I Will double check!",
      "parentUuid": "b4925bab_6abe00e3",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8b83bc3_77ad7395",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 514,
      "author": {
        "id": 4615
      },
      "writtenOn": "2019-09-19T02:53:42Z",
      "side": 1,
      "message": "I will remove this.",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "463d82eb_2ab849d6",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 865
      },
      "writtenOn": "2019-09-18T21:42:42Z",
      "side": 1,
      "message": "why we need to check: value !\u003d defaultValueNode\nhow does it make different if input value is same as default value, still value wass provided in input.",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e196c9d8_605a11bf",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 4615
      },
      "writtenOn": "2019-09-19T02:53:42Z",
      "side": 1,
      "message": "Yes it makes a difference because, if we are resolving a resource and a default value was provided:\nThe default value is always applied to the input value of any resource to resolve (if there is no input). \n\nSo keep the default value and do the resolution, we check if no input was provided and if the default is equal to default (when provided).",
      "parentUuid": "463d82eb_2ab849d6",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aeed9dd_21ff1b1a",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 865
      },
      "writtenOn": "2019-09-19T15:22:44Z",
      "side": 1,
      "message": "I still didn\u0027t get the need of checking that.. logic should be simple as:\n\nIf value is provided in input -\u003e just take the value, doesn\u0027t matter if it\u0027s same as default or not.\n\nExample: \nDefault value is XYZ, but in input it was ABC, which should be final resolved value -\u003e ABC (doesn\u0027t matter if it\u0027s same as default or not)\nDefault value is XYZ, but in input it was XYZ, which should be final resolved value -\u003e XYZ (doesn\u0027t matter if it\u0027s same as default or not)",
      "parentUuid": "e196c9d8_605a11bf",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da5825ef_2d53ed6f",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 4615
      },
      "writtenOn": "2019-09-19T15:42:10Z",
      "side": 1,
      "message": "Hello Kapil,\n\nIt is a little bit confusing.\n\nNow when we set a default value in mapping file for example:\n{\n    \"name\": \"private-prefix-id\",\n    \"property\": {\n      \"description\": \"\",\n      \"required\": false,\n      \"type\": \"string\",\n      \"default\": \"\"\n    },\n    \"input-param\": false,\n    \"dictionary-name\": \"private-prefix-id\",\n    \"dictionary-source\": \"processor-db\",\n    \"dependencies\": [],\n    \"version\": 0\n}\n\nThe value inside default is automatically assigned to the input (because the input is NULL from the start).\n\nThen, in resource resolution, we check if the input value change (means that we check if the input value is still NULL) and for how case, we added a default value into mapping file and this changed the input value. So, resource resolution will not be process and think that input value was process.\n\nWe want to continue the resolution if a default value was provided. So we keep input value change by default and process resource resolution. That is why we double check if value !\u003d Default.",
      "parentUuid": "5aeed9dd_21ff1b1a",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74308825_f0d2518d",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 865
      },
      "writtenOn": "2019-09-19T16:29:23Z",
      "side": 1,
      "message": "I got you, but what if input value was provided but it was same as default value ?\nIn that case API will return \u0027false\u0027 which I guess is not expected.",
      "parentUuid": "da5825ef_2d53ed6f",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb03df8b_51908f54",
        "filename": "ms/blueprintsprocessor/functions/resource-resolution/src/main/kotlin/org/onap/ccsdk/cds/blueprintsprocessor/functions/resource/resolution/utils/ResourceAssignmentUtils.kt",
        "patchSetId": 8
      },
      "lineNbr": 517,
      "author": {
        "id": 4615
      },
      "writtenOn": "2019-09-19T17:32:11Z",
      "side": 1,
      "message": "If Input is provided and \u003d\u003d default -\u003e this case shouldn\u0027t be necessary as the default value\nwill be enough.\n\nCan we have a call Kapil? Because, Default is failing now because of that simple condition\n(value.returnNullIfMissing() !\u003d null) Input will not be null if we define default.\n\nTwo options:\n- avoid setting default value to input when loading Blueprint context\n- Add a condition to take default in consideration.",
      "parentUuid": "74308825_f0d2518d",
      "revId": "55ab1acd9c8d26355e51796c3f22913f280f6272",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}